// ==UserScript==
// @name         Replace ZCU Background Logos & Help Icon + Custom Menu & Style
// @namespace    http://tampermonkey.net/
// @version      1.4-clean
// @description  Customizes ZCU portal with new menu and styles (no rgba)
// @match        *://portal.zcu.cz/*
// @grant        none
// ==/UserScript==

(function () {
  'use strict';

  // === Logo replacement ===
  const tryReplace = () => {
    const logoLeft = document.querySelector(".app_header_left");
    const logoCenter = document.querySelector(".app_header_center");

    if (logoLeft) {
      logoLeft.style.backgroundImage = "url('https://github.com/snipexos/zcu_portal_customization/blob/master/IMAGES/zculogo-removedbg.png?raw=true')";
      logoLeft.style.backgroundSize = "contain";
      logoLeft.style.backgroundRepeat = "no-repeat";
      logoLeft.style.backgroundPosition = "left center";
    }

    if (logoCenter) {
      logoCenter.style.backgroundImage = "url('https://github.com/snipexos/zcu_portal_customization/blob/master/IMAGES/portalZculogo-removedbg.png?raw=true')";
      logoCenter.style.backgroundSize = "contain";
      logoCenter.style.backgroundRepeat = "no-repeat";
      logoCenter.style.backgroundPosition = "center center";
    }

    if (!logoLeft || !logoCenter) setTimeout(tryReplace, 100);
  };

  const tryReplaceHelpIcon = () => {
    const helpImg = document.querySelector('img[alt="Help"][src*="icon-title_help.png"]');
    if (helpImg) {
      helpImg.src = "https://upload.wikimedia.org/wikipedia/commons/5/5a/Black_question_mark.png";
      helpImg.style.width = "16px";
      helpImg.style.height = "16px";
    } else {
      setTimeout(tryReplaceHelpIcon, 100);
    }
  };

  tryReplace();
  tryReplaceHelpIcon();

  // === Style injection ===
  const style = document.createElement("style");
  style.innerHTML = `
    :root {
      --background-color: #ffffff;
      --theme-color: #ffffff;
      --primary-color: #23549b;
      --header-color: #23549b;
      --text-color: #ffffff;
      --link-color: var(--primary-color);
      --highlight-color: #0055a5;
    }

    a, a:active, a:visited, a:hover {
      color: var(--link-color) !important;
    }

    td.app_portlet_head_title,
    td.app_portlet_head_icons,
    div.app_header,
    ul.app_menubar {
      background-color: var(--header-color) !important;
    }

    ul.app_menubar {
      border-top: 1px solid var(--header-color);
      border-bottom: 5px solid #000;
    }

    ul.app_menubar li.selected a,
    ul.app_menubar li.selected a:active,
    ul.app_menubar li.selected a:visited {
      color: var(--text-color) !important;
    }

    ul.app_menubar li {
      display: inline-block;
      margin: 0;
      border: none;
    }

    ul.app_menubar li.selected {
      border: none;
      color: black;
      background-color: var(--header-color);
    }

    .app_menubar.level_0,
    .app_menubar.level_1 {
      display: none !important;
    }

    div.app_content {
      border-top: none;
    }

    #modern-hamburger {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--header-color);
      color: white;
      font-size: 16px;
      font-family: sans-serif;
      border: none;
      border-radius: 0 0 12px 12px;
      cursor: pointer;
      width: 100%;
      height: 100%;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      transition: background 0.2s ease;
      padding-top: 10px;
      padding-bottom: 10px;
    }


    #modern-hamburger:hover {
      background: var(--background-color);
      color: #000000;
    }

    #modern-nav-wrapper {
      display: none;
      position: absolute;
      top: 160px;
      left: 40px;
      z-index: 50;
      opacity: 0;
      transform: translateY(-10px);
      transition: opacity 0.25s ease, transform 0.25s ease;
    }

    #modern-nav-wrapper.show {
      display: flex !important;
      opacity: 1;
      transform: translateY(0);
    }

    #modern-nav-inner {
  display: flex;
  flex-direction: row;
  align-items: flex-start; /* každý sloupec podle obsahu */
  position: relative; /* pro absolutní pozicování submenu */
}

    #modern-main, #modern-sub {
      background-color: #ffffff;
      border: none;
      padding: 12px;
      width: 220px;
      font-family: sans-serif;
      display: flex;
      flex-direction: column;
    }

    #modern-main {
    backdrop-filter: blur(10px);
  background-color: color-mix(in srgb, var(--primary-color) 10%, transparent);
  border-radius: 12px;
  padding: 12px;
  width: 220px;
  font-family: sans-serif;
  display: flex;
  flex-direction: column;
  /* výška automatická */
}


#modern-sub {
  position: absolute;
  top: 0;
  left: 100%; /* hned vedle main menu */
  margin-left: 0px;
  width: 220px;
  max-height: 500px;
  overflow-y: auto;
  backdrop-filter: blur(10px);
  background-color: color-mix(in srgb, var(--primary-color) 10%, transparent);
  border-radius: 12px;
  padding: 12px;
  z-index: 999;
}

    #modern-main a, #modern-sub a {
      display: block;
      color: var(--highlight-color);
      padding: 6px 8px;
      text-decoration: none;
      font-weight: bold;
      border-radius: 6px;
      transition: background 0.2s;
      border-radius: 12px;
  transition: box-shadow 0.2s ease, border 0.2s ease, transform 0.2s ease;
    }

    #modern-main a:hover, #modern-sub a:hover {
      background: color-mix(in srgb, var(--primary-color) 95%, transparent);
      color: var(--theme-color) !important;
    }

    div.app_page_menu {
      background-color: var(--background-color);
    }

    div.app_page_content {
      border-top: none;
      margin-bottom: 7px;
      padding: 0 7px 7px;
    }

ul.ui-autocomplete {
  background: white;
  border: 1px solid #aaa;
  border-radius: 8px;
  padding: 4px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
  font-family: sans-serif;
  z-index: 10000 !important;
}

ul.ui-autocomplete .ui-menu-item {
  padding: 0; /* odstraníme padding tady */
}

/* Hlavní wrapper každého výsledku */
ul.ui-autocomplete .ui-menu-item-wrapper {
  padding: 6px 10px;
  font-size: 1rem;
  color: #333;
  border-radius: 6px;
  cursor: pointer;
}

/* Hover a focus – správně na .ui-state-focus */
ul.ui-autocomplete .ui-menu-item-wrapper.ui-state-focus {
  background-color: var(--header-color) !important;
  color: var(--text-color) !important;
}
/* === Fix přetékání portletu Rozvrh === */
#cpa_664150,
#prohlizeniAnchor,
#prohlizeniContent,
#prohlizeniEntitaContent,
#prohlizeniDetail,
#prohlizeniEntitaFormMain,
form.prohlizeniEntitaFormMain,
div.prohlizeniEntitaFormMain,
div.prohlizeniEntitaFormExt {
  max-width: 100% !important;
  box-sizing: border-box !important;
  overflow-x: auto !important;
  display: block !important;
}

/* Tabulky uvnitř prohlížení (včetně xg_stag_formTable) */
#prohlizeniContent table,
#prohlizeniEntitaContent table,
#prohlizeniDetail table,
table.xg_stag_formTable {
  width: auto !important;
  max-width: 100% !important;
  display: block !important;
  box-sizing: border-box !important;
  overflow-x: auto !important;
}
/* === Hard fix pro portlet "Prohlížení" (S025) === */
#cpa_664150,
#cpa_664150 * {
  max-width: 100% !important;
  overflow-x: hidden !important;
  box-sizing: border-box !important;
}

/* Scrollbar uvnitř portletu zakázán */
#cpa_664150::-webkit-scrollbar {
  display: none;
}
.app_container,
.app_header_wrapper,
.app_header,
.clear,
.app_menu,
#app_content,
.app_page_multi,
.app_footer_tertiary {
  max-width: 100vw !important;
  width: 100% !important;
  box-sizing: border-box !important;
  overflow-x: hidden !important;
}
#modern-portlets-wrapper {
  display: flex;
  gap: 20px;
  padding: 20px;
  align-items: flex-start;
}

.modern-portlet-column {
  display: flex;
  flex-direction: column;
  gap: 20px;
  flex: 1;
  min-width: 0;
}

.draggable-portlet {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  padding: 20px;
  box-sizing: border-box;
  transition: box-shadow 0.2s ease, border 0.2s ease, transform 0.2s ease;
  border: 2px solid transparent;
}

.draggable-portlet:hover {
  border: 2px solid var(--primary-color);
  box-shadow: 0 6px 16px rgba(35, 84, 155, 0.2); /* primární barva v jemném stínu */
  transform: translateY(-2px); /* mírné vyskočení */
}



.draggable-portlet[data-portlet-id="rozvrh"] {
  grid-column: 2 !important;
  grid-row: 1 / 4 !important;
}

.draggable-portlet[data-portlet-id="info"] {
  grid-column: 1 !important;
  grid-row: 1 !important;
}

.draggable-portlet[data-portlet-id="vysledky"] {
  grid-column: 1 !important;
  grid-row: 2 !important;
}

.draggable-portlet[data-portlet-id="plneni"] {
  grid-column: 1 !important;
  grid-row: 3 !important;
}


@media (max-width: 768px) {
  #modern-portlets-wrapper {
    display: flex !important;
    flex-direction: column !important;
    align-items: stretch !important;
  }

  .draggable-portlet {
    width: 100% !important;
    flex: none !important;
    display: block !important;
    margin-bottom: 16px;
  }

  #664150 {
    width: 100% !important;
    flex: none !important;
    margin-bottom: 16px;
    font-size: 0.8rem !important;
    overflow-x: auto !important;
  }

  #664150 table {
    font-size: 0.75rem !important;
    min-width: unset !important;
    width: 100% !important;
    table-layout: auto !important;
    display: block !important;
    overflow-x: auto !important;
    box-sizing: border-box !important;
  }

  #664150 td, #664150 th {
    padding: 2px 4px !important;
    white-space: nowrap !important;
    font-size: 0.75rem !important;
  }
}

#modern-hamburger.menu-open {
  border-radius: 0 0 0 12px !important; /* levý dolní roh ano, pravý ne */
}
.app_page_menu a:not(#modern-hamburger) {
  display: flex;
  align-items: center;
  margin: 2px 0px;
  padding: 6px 10px;
  color: #003366;
  font-weight: bold;
  font-family: sans-serif;
  text-decoration: none;
  border-radius: 6px;
  background: #e9f1fb;
  transition: all 0.2s ease;
  transform: translateX(0);
}

.app_page_menu a:not(#modern-hamburger):hover {
  transform: translateX(6px);
  background: #d3e6fd;
  box-shadow: 2px 2px 5px rgba(35 84 155 0.5);
}
div.app_page_menu ul li {
  border-bottom: none !important;
}
div.app_page_menu ul li.selected:first-child {
  border-top: none;
}
#unified-portlet-wrapper {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  padding: 10px;
}

.unified-portlet {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  padding: 16px;
  box-sizing: border-box;
}
.app_header_right .upper > div {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
  justify-content: flex-end;
  font-family: sans-serif;
  font-size: 13px;
}

.app_header_right .upper a {
  color: var(--link-color) !important;
  text-decoration: none;
  padding: 4px 8px;
  border-radius: 6px;
  transition: background 0.2s;
}

.app_header_right .upper a:hover {
  background-color: #f0f4ff;
}

.app_header_right .upper form {
  margin: 0;
}

#portal-search-form-desktop {
  display: flex;
  align-items: center;
  gap: 8px;
}
.app_header_right a,
.app_header_right button,
.app_header_right .falseLink {
  background: var(--header-color);
  color: var(--text-color) !important;
  padding: 1px 10px !important;
  border: none;
  border-radius: 8px;
  font-family: sans-serif;
  font-size: 1rem;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  white-space: nowrap;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}
.app_header_right a:hover,
.app_header_right button:hover,
.app_header_right .falseLink:hover {
  background: var(--highlight-color);
  color: white !important;
  transform: translateY(-1px);
  box-shadow: 0 4px 10px rgba(0,0,0,0.15);
}
  `;
  document.head.appendChild(style);

  // === Menu logic ===
  applySavedTheme();

  const hamburger = document.createElement("div");
  hamburger.id = "modern-hamburger";
  hamburger.textContent = "☰ Menu";

  const navWrapper = document.createElement("div");
  navWrapper.id = "modern-nav-wrapper";

  const navInner = document.createElement("div");
  navInner.id = "modern-nav-inner";

  const mainMenu = document.createElement("div");
  mainMenu.id = "modern-main";

  const subMenu = document.createElement("div");
  subMenu.id = "modern-sub";

function initModernMenuFromMobile() {
  mainMenu.innerHTML = '';

  const mobileMainItems = document.querySelectorAll('#mobile_nav_menu_toplinks a');
  mobileMainItems.forEach(link => {
    const label = link.textContent.trim();
    const target = link.getAttribute('data-target');
    const a = document.createElement('a');
    a.textContent = label;
    a.href = "#";
    a.dataset.mobileTarget = target;

    a.addEventListener('mouseenter', () => {
      loadMobileSubmenu(target);
    });

    mainMenu.appendChild(a);
  });
}


function loadMobileSubmenu(targetId) {
  subMenu.innerHTML = '';
  const submenuPanel = document.querySelector(targetId);
  if (!submenuPanel) return;

  const links = submenuPanel.querySelectorAll('a.page');
  links.forEach(link => {
    const a = document.createElement('a');
    a.href = link.href;
    a.textContent = link.textContent.trim();
    subMenu.appendChild(a);
  });

  subMenu.style.display = subMenu.children.length > 0 ? "flex" : "none";
}


let submenuTimer;

function setupHoverZone() {
  const hoverZone = [hamburger, navWrapper, mainMenu, subMenu];

  hoverZone.forEach(el => {
    el.addEventListener("mouseenter", () => {
      clearTimeout(submenuTimer);
    });

    el.addEventListener("mouseleave", () => {
      submenuTimer = setTimeout(() => {
        navWrapper.classList.remove("show");
        navWrapper.style.display = "none";
        hamburger.classList.remove("menu-open");
        mainMenu.classList.remove("no-top-left-radius");
      }, 200);
    });
  });
}
hamburger.addEventListener("mouseenter", () => {
  const rect = hamburger.getBoundingClientRect();
  navWrapper.style.left = (rect.right + window.scrollX) + "px";
  navWrapper.style.top = (rect.top + window.scrollY) + "px";
  navWrapper.style.display = "flex";
  requestAnimationFrame(() => navWrapper.classList.add("show"));

  hamburger.classList.add("menu-open");
  mainMenu.classList.add("no-top-left-radius"); // ← tenhle řádek dělá roh
});


  document.addEventListener("click", (e) => {
    if (!hamburger.contains(e.target) && !navWrapper.contains(e.target)) {
      navWrapper.classList.remove("show");
      navWrapper.style.display = "none";
    }
  });


  navInner.appendChild(mainMenu);
  navInner.appendChild(subMenu);
  navWrapper.appendChild(navInner);

  const app_page_menu = document.querySelector('.app_page_menu');
  if (app_page_menu) {
    app_page_menu.insertBefore(hamburger, app_page_menu.firstChild);
  } else {
    document.body.appendChild(hamburger);
  }

  document.body.appendChild(navWrapper);
initModernMenuFromMobile();
setupHoverZone();

  const hideOriginalMenus = () => {
    document.querySelectorAll('.app_menubar.level_0, .app_menubar.level_1').forEach(el => {
      el.style.display = 'none';
    });
  };
  hideOriginalMenus();
  const observer = new MutationObserver(hideOriginalMenus);
  observer.observe(document.body, { childList: true, subtree: true });

  const firstPortlet = document.querySelector(".app_page_content .app_portlet_frame_in");
  if (firstPortlet) {
    firstPortlet.style.padding = "0";
    firstPortlet.style.margin = "0";
  }

  // === Simple style editor (bez RGB) ===
function toggleTheme() {
  const html = document.documentElement;
  const isDark = html.dataset.theme === "dark";
  html.dataset.theme = isDark ? "light" : "dark";
  localStorage.setItem("theme", html.dataset.theme);
}

function applySavedTheme() {
  const savedTheme = localStorage.getItem("theme");
  const savedColor = localStorage.getItem("primaryColor");

  document.documentElement.dataset.theme = savedTheme || "light";

  if (savedColor) {
    document.documentElement.style.setProperty('--primary-color', savedColor);
  }
}



const initStyleEditor = () => {
  const container = document.querySelector(".app_header_right .upper div");
  if (!container) return setTimeout(initStyleEditor, 300);

  const styleButton = document.createElement("a");
  styleButton.textContent = "🎨 Styl";
  styleButton.className = "falseLink hideForMobile";
  styleButton.style.cursor = "pointer";
  styleButton.style.position = "relative";

  container.appendChild(styleButton);

  const dropdown = document.createElement("div");
  dropdown.style.position = "absolute";
  dropdown.style.top = "0";
  dropdown.style.left = "0";
  dropdown.style.background = "#fff";
  dropdown.style.padding = "12px";
  dropdown.style.border = "1px solid #aaa";
  dropdown.style.borderRadius = "10px";
  dropdown.style.boxShadow = "0 2px 10px rgba(0,0,0,0.1)";
  dropdown.style.display = "none";
  dropdown.style.zIndex = "9999";
  dropdown.style.minWidth = "200px";
  dropdown.style.color = "#000";
  dropdown.style.fontFamily = "sans-serif";

  document.body.appendChild(dropdown);

  // === Přepínač tmavý/světlý ===
const modeToggle = document.createElement("button");
modeToggle.textContent = document.documentElement.dataset.theme === "dark" ? "☀️ Světlý motiv" : "🌙 Tmavý motiv";
modeToggle.style.display = "block";
modeToggle.style.marginBottom = "10px";
modeToggle.style.padding = "6px 10px";
modeToggle.style.border = "none";
modeToggle.style.borderRadius = "6px";
modeToggle.style.cursor = "pointer";
modeToggle.style.background = "var(--header-color)";
modeToggle.style.color = "var(--text-color)";
modeToggle.style.fontFamily = "sans-serif";

modeToggle.addEventListener("click", () => {
  toggleTheme();
  modeToggle.textContent = document.documentElement.dataset.theme === "dark" ? "☀️ Světlý motiv" : "🌙 Tmavý motiv";
});

dropdown.appendChild(modeToggle);

// === Výběr primární barvy ===
const colorLabel = document.createElement("label");
colorLabel.textContent = "Primární barva:";
colorLabel.style.fontSize = "12px";
colorLabel.style.display = "block";
colorLabel.style.margin = "4px 0";

const colorInput = document.createElement("input");
const savedColor = localStorage.getItem("primaryColor");
colorInput.type = "color";
colorInput.value = savedColor || getComputedStyle(document.documentElement).getPropertyValue('--primary-color').trim();
colorInput.style.marginBottom = "8px";

colorInput.addEventListener("input", () => {
  document.documentElement.style.setProperty('--primary-color', colorInput.value);
  localStorage.setItem("primaryColor", colorInput.value);
});

dropdown.appendChild(colorLabel);
dropdown.appendChild(colorInput);

  // === Zobrazit / skrýt ===
  let dropdownVisible = false;

  styleButton.addEventListener("click", (e) => {
    e.preventDefault();
    dropdownVisible = !dropdownVisible;

    if (dropdownVisible) {
      const rect = styleButton.getBoundingClientRect();
      dropdown.style.top = `${rect.bottom + window.scrollY}px`;
      dropdown.style.left = `${rect.right - 200 + window.scrollX}px`;
      dropdown.style.display = "block";
    } else {
      dropdown.style.display = "none";
    }

    e.stopPropagation();
  });

  document.addEventListener("click", (e) => {
    if (!styleButton.contains(e.target) && !dropdown.contains(e.target)) {
      dropdown.style.display = "none";
      dropdownVisible = false;
    }
  });
};






function initModernDraggablePortletsUniversal() {
  const originalPortlets = Array.from(document.querySelectorAll(".app_portlet_frame_in"));
  if (originalPortlets.length === 0) {
    setTimeout(initModernDraggablePortletsUniversal, 300);
    return;
  }

  const pageContent = document.querySelector(".app_page_content");
  if (!pageContent) return;

  // Vytvoř wrappery
  const leftCol = document.createElement("div");
  leftCol.className = "modern-portlet-column";

  const rightCol = document.createElement("div");
  rightCol.className = "modern-portlet-column";

  const wrapper = document.createElement("div");
  wrapper.id = "modern-portlets-wrapper";
  wrapper.style.display = "flex";
  wrapper.style.gap = "20px";

  // Wrappery musíme připojit do DOMu, aby se dala měřit výška
  wrapper.appendChild(leftCol);
  wrapper.appendChild(rightCol);
  pageContent.prepend(wrapper);

  // Dočasný prvek na měření výšky
  const tempWrapper = document.createElement("div");
  tempWrapper.style.display = "none";
  document.body.appendChild(tempWrapper);

  const portletObjs = originalPortlets.map(p => {
    const clone = p.cloneNode(true);
    tempWrapper.appendChild(clone);
    return { original: p, clone: clone };
  });

  const THRESHOLD = 500;

  // 1. Informace o uživateli
  const userPortletObj = portletObjs.find(obj => {
    const h2 = obj.clone.querySelector("h2");
    return h2 && h2.textContent.includes("Informace o uživateli");
  });

  if (userPortletObj) {
    portletObjs.splice(portletObjs.indexOf(userPortletObj), 1);
    const box = document.createElement("div");
    box.className = "draggable-portlet";
    box.innerHTML = userPortletObj.original.innerHTML;
    userPortletObj.original.remove();
    leftCol.appendChild(box);
  }

  // 2. Jeden další portlet pod něj
  if (portletObjs.length > 0) {
    const next = portletObjs.shift();
    const box = document.createElement("div");
    box.className = "draggable-portlet";
    box.innerHTML = next.original.innerHTML;
    next.original.remove();
    leftCol.appendChild(box);
  }

  // 3. Rozdělit na vysoké a nízké
  const tall = [];
  const small = [];

  portletObjs.forEach(obj => {
    const height = obj.clone.offsetHeight;
    if (height > THRESHOLD) {
      tall.push(obj);
    } else {
      small.push(obj);
    }
  });

  tempWrapper.remove();

  // 4. Vysoké → levý sloupec
  tall.forEach(obj => {
    const box = document.createElement("div");
    box.className = "draggable-portlet";
    box.innerHTML = obj.original.innerHTML;
    obj.original.remove();
    leftCol.appendChild(box);
  });

  // 5. Nízké → střídavě do levého nebo pravého, podle aktuální výšky sloupců
  small.forEach(obj => {
    const box = document.createElement("div");
    box.className = "draggable-portlet";
    box.innerHTML = obj.original.innerHTML;
    obj.original.remove();

    // porovnáme výšku sloupců
    const leftHeight = leftCol.offsetHeight;
    const rightHeight = rightCol.offsetHeight;

    if (rightHeight <= leftHeight) {
      rightCol.appendChild(box);
    } else {
      leftCol.appendChild(box);
    }
  });
}


initModernDraggablePortletsUniversal();



  initStyleEditor();
})();
